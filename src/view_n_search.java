
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author hasil
 */

public class view_n_search extends javax.swing.JDialog {

   int row;
    int column;
    String value;
    static ResultSet rs1;
    String a,b;

    /**
     * Creates new form view_n_search
     */
    public view_n_search(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
         setLocationRelativeTo(parent);
        addDataToTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        String colHeader []= new String []{"ID","Book Name","Edition","Publisher",
            "Quantity"
        };
        dtm = new DefaultTableModel(0,0);
        dtm.setColumnIdentifiers(colHeader);
        tbl1 = new javax.swing.JTable();
        searchlbl = new javax.swing.JLabel();
        searchname = new javax.swing.JTextField();
        noResultlbl = new javax.swing.JLabel();
        okbtn = new javax.swing.JButton();
        search1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("View & Search Book");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tbl1.setModel(dtm);
        tbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl1MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tbl1MouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tbl1);

        searchlbl.setText("Search Book");

        searchname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchnameActionPerformed(evt);
            }
        });
        searchname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchnameKeyReleased(evt);
            }
        });

        noResultlbl.setForeground(new java.awt.Color(255, 51, 51));
        noResultlbl.setText("No result Found!!!");

        okbtn.setText("ok");
        okbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okbtnActionPerformed(evt);
            }
        });

        search1.setText("Search");
        search1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search1ActionPerformed(evt);
            }
        });

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(searchlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(searchname, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(search1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addComponent(okbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(noResultlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(115, 115, 115))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(noResultlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(okbtn))))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okbtnActionPerformed

        a=tbl1.getModel().getValueAt(tbl1.getSelectedRow(), 1).toString();
 b=tbl1.getModel().getValueAt(tbl1.getSelectedRow(), 3).toString();
 String id=tbl1.getModel().getValueAt(tbl1.getSelectedRow(), 0).toString();
 String q=tbl1.getModel().getValueAt(tbl1.getSelectedRow(), 4).toString();
db_operation db = new db_operation();
            db.updatebookq(Integer.parseInt(id),Integer.parseInt(q));
 
 new issuerecord(a,b,id).setVisible(true);
//          noResultlbl.setVisible(false);
//        db_operation dbopt = new db_operation();
//        ResultSet rs = dbopt.searchBookInformation((String) searchname.getText().toString());
//        int j = 0;
////        try {
////
////            //  System.out.println("a");
////            // TODO add your handling code here:
////            while (rs.next()) {
////                String id = rs.getString(1);
////                int i = Integer.parseInt(id);
////                String k;
////                if (searchname.getText().isEmpty()) {
////                    noResultlbl.setVisible(true);
////                } else {
////                    k = searchname.getText();
////                    if (i == k) {
////                        j = 1;
////                    }
////                }
////            }
////        } catch (SQLException ex) {
////            Logger.getLogger(Search.class.getName()).log(Level.SEVERE, null, ex);
////        }
////        if (j == 1) {
//            issuerecord aa = new issuerecord((String) searchname.getText().toString());
//            aa.setVisible(true);
//
//            db_operation dbopt1 = new db_operation();
//            ResultSet rs11 = dbopt1.searchBookInformation((String) searchname.getText().toString());
//          
//            rs1 = rs11;
////int column = 0;
////int row = jTable1.getSelectedRow();
//            dtm.setRowCount(0);
//            try {
////String value = jTable1.getModel().getValueAt(row, column).toString();
////        System.out.println(""+value);
//                while (rs11.next()) {
//                    String id = rs11.getString(1); //String  id= rs.getString("ID");
//                    String name = rs11.getString(2); //String fname=rs.getString("FirstName");
//                    String edition = rs11.getString(3);
//                    String publisher = rs11.getString(4);
//                    String quantity = rs11.getString(5);
//                  
//
//                    Vector<String> v = new Vector<String>();
//                    v.add(id);
//                    v.add(name);
//                    v.add(edition);
//                    v.add(publisher);
//                    v.add(quantity);
//                
//                    dtm.addRow(v);
//
//                    noResultlbl.setVisible(false);
//
//                }
//
//            } catch (SQLException ex) {
//                System.out.println("Error in addDataToTable" + ex);
//            }
//            if (dtm.getRowCount() == 0) {
//                noResultlbl.setVisible(true);
//            }
////
////        } else {
////            noResultlbl.setVisible(true);
////        }
//               
// TODO add your handling code here:
    }//GEN-LAST:event_okbtnActionPerformed

    private void searchnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchnameKeyReleased
     String name=this.searchname.getText();

        db_operation dbopt=new db_operation();
        ResultSet rs1=dbopt.searchBookInformation(name);
        dtm.setRowCount(0);

        try {
            while(rs1.next()){
                String  id= rs1.getString(1); //String  id= rs.getString("ID");
                String  bname= rs1.getString(2); //String fname=rs.getString("FirstName");
                String  edition= rs1.getString(3);
                String  publisher= rs1.getString(4);
             
                String quantity=rs1.getString(5);
               
                Vector<String> v=new Vector<String>();
                v.add(id);
                v.add(bname);
                v.add(edition);
                v.add(publisher);
             
              v.add(quantity);
                dtm.addRow(v);

            }

        } catch (SQLException ex) {
            System.out.println("Error in addDataToTable"+ex);
        }      
        // TODO add your handling code here:
    }//GEN-LAST:event_searchnameKeyReleased

    private void searchnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchnameActionPerformed
         // TODO add your handling code here:
    }//GEN-LAST:event_searchnameActionPerformed

    private void search1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search1ActionPerformed
        db_operation dbopt = new db_operation();
        ResultSet rs = dbopt.searchBookInformation(searchname.getText().toString());
        rs1 = rs;
 dtm.setRowCount(0);
        try {


            while (rs.next()) {

                String id = rs.getString(1); //String  id= rs.getString("ID");
                String bname = rs.getString(2); //String fname=rs.getString("FirstName");
                String edition = rs.getString(3);
                String publisher = rs.getString(4);
                String qnty = rs.getString(5);
                

                Vector<String> v = new Vector<String>();
                v.add(id);
                v.add(bname);
                v.add(edition);
                v.add(publisher);
                v.add(qnty);
               
                dtm.addRow(v);

                noResultlbl.setVisible(false);

            }

        } catch (SQLException ex) {
            System.out.println("Error in addDataToTable" + ex);
        }
        if (dtm.getRowCount() == 0) {
            noResultlbl.setVisible(true);
           
        } else {
           noResultlbl.setVisible(false);

        }
// TODO add your handling code here:
    }//GEN-LAST:event_search1ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       noResultlbl.setVisible(false); // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void tbl1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl1MouseReleased
// search1.setVisible(true);
       if (evt.getClickCount() == 2) {System.out.println("Hello");
        //if (evt.getClickCount() == 2) {
           db_operation dbopt=new db_operation();
          String a= tbl1.getModel().getValueAt(tbl1.getSelectedRow(), 0).toString();
           
         // this.setVisible();
          new updatebook(a);  }
         if (evt.getClickCount() == 1) {System.out.println("Hello");
        //if (evt.getClickCount() == 2) {
           db_operation dbopt=new db_operation();
           
           
          String a= tbl1.getModel().getValueAt(tbl1.getSelectedRow(), 1).toString();
         // this.setVisible();
          searchname.setText("");
           searchname.setText(a);
           
          
          
         }
//          
//            db_operation dopt = new db_operation();
//
//            ArrayList a = null;
//            a = dopt.viewById(tbl1.getModel().getValueAt(tbl1.getSelectedRow(), 0).toString());
//
//            updatebook up = new updatebook(a);
//            up.setVisible(true);
//            this.dispose();
//            searchingBook();
//
//        }        // TODO add your handling code here:
    }//GEN-LAST:event_tbl1MouseReleased

    private void tbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl1MouseClicked
//System.out.println("Hello");
//        //if (evt.getClickCount() == 2) {
//           db_operation dbopt=new db_operation();
//          String a= tbl1.getModel().getValueAt(tbl1.getSelectedRow(), 0).toString();
//         // this.setVisible();
//          new updatebook(a);        // TODO add your handling code here:
    }//GEN-LAST:event_tbl1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new LibraryMgmntSys().setVisible(true);
        this.dispose();      // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
     public void searchingBook() {
        try {
            noResultlbl.setVisible(false);
            searchname.setVisible(false);

            db_operation dbopt = new db_operation();
            ResultSet rs = dbopt.viewFromBookTable(searchname.getText());
            if (!rs.isBeforeFirst()) {
                tbl1.setVisible(false);
                noResultlbl.setText("No result for name: " + searchname.getText());
                noResultlbl.setVisible(true);
            } else {

                tbl1.setVisible(true);
                tbl1.setModel(buildTableModel(rs));

            }
        } catch (SQLException ex) {
            Logger.getLogger(view_n_search.class.getName()).log(Level.SEVERE, null, ex);
        }

    }  
         public static DefaultTableModel buildTableModel(ResultSet rs)
            throws SQLException {

        ResultSetMetaData metaData = rs.getMetaData();

        // names of columns
        Vector<String> columnNames = new Vector<String>();
        int columnCount = metaData.getColumnCount();
        for (int column = 1; column <= columnCount; column++) {
            columnNames.add(metaData.getColumnName(column));
        }

        // data of the table
        Vector<Vector<Object>> data = new Vector<Vector<Object>>();
        while (rs.next()) {
            Vector<Object> vector = new Vector<Object>();
            for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
                vector.add(rs.getObject(columnIndex));
            }
            data.add(vector);
        }

        return new DefaultTableModel(data, columnNames);

    }
public void addDataToTable() {
        try {
            db_operation dbopt=new db_operation();
            ResultSet rs=dbopt.viewAllBookInformation();
            
            while(rs.next()){
              
                String  id= rs.getString(1); //String  id= rs.getString("ID");
                String  name= rs.getString(2); //String fname=rs.getString("FirstName");
                String  edition= rs.getString(3);
                String  publisher= rs.getString(4);
              
                String quantity=rs.getString(5);
                
                Vector<String> v=new Vector<String>();
                v.add(id);
                v.add(name);
                v.add(edition);
                v.add(publisher);
               
                v.add(quantity);
                
                dtm.addRow(v);
          
                
            }   } catch (SQLException ex) {
           System.out.println("Error in addDataToTable"+ex);
        }
}    
/**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(view_n_search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(view_n_search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(view_n_search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(view_n_search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                view_n_search dialog = new view_n_search(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    public void hideAll() {
        searchname.setVisible(false);
        searchlbl.setVisible(false);
        okbtn.setVisible(false);
    }//To change body of generated methods, choose Tools | Templates.
DefaultTableModel dtm=null; 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel noResultlbl;
    private javax.swing.JButton okbtn;
    private javax.swing.JButton search1;
    private javax.swing.JLabel searchlbl;
    private javax.swing.JTextField searchname;
    private javax.swing.JTable tbl1;
    // End of variables declaration//GEN-END:variables
}
