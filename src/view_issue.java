
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author hasil
 */
public class view_issue extends javax.swing.JDialog {

    /**
     * Creates new form view_issue
     */
    public view_issue(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
         setLocationRelativeTo(parent);
           addDataToTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        String colHeader []= new String []{"Issue ID","Issue Date","Return Date","Student ID","Book ID"

        };
        dtm = new DefaultTableModel(0,0);
        dtm.setColumnIdentifiers(colHeader);
        tbl1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        searchlbl = new javax.swing.JLabel();
        bid = new javax.swing.JTextField();
        okbtn = new javax.swing.JButton();
        searchlbl1 = new javax.swing.JLabel();
        stid = new javax.swing.JTextField();
        Returned_Date = new javax.swing.JLabel();
        searchlbl3 = new javax.swing.JLabel();
        rtdate = new org.jdesktop.swingx.JXDatePicker();
        rdate = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("View Issue");
        setResizable(false);

        tbl1.setModel(dtm);
        tbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tbl1MouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tbl1);

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        searchlbl.setText("Book Id");

        bid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bidActionPerformed(evt);
            }
        });
        bid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                bidKeyReleased(evt);
            }
        });

        okbtn.setText("ok");
        okbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okbtnActionPerformed(evt);
            }
        });

        searchlbl1.setText("Student Id");

        stid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stidActionPerformed(evt);
            }
        });
        stid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                stidKeyReleased(evt);
            }
        });

        Returned_Date.setText("Returnned Date");

        searchlbl3.setText("Returnning Date");

        rtdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rtdateActionPerformed(evt);
            }
        });

        rdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdateActionPerformed(evt);
            }
        });
        rdate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                rdateKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(searchlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bid, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchlbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(stid, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(okbtn)
                            .addComponent(searchlbl3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rdate, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Returned_Date, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rtdate, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchlbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchlbl3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Returned_Date, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rtdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(okbtn))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new LibraryMgmntSys().setVisible(true);
        this.dispose();  
// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tbl1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl1MouseReleased
if (evt.getClickCount() == 1) {
    System.out.println("Hello");
    //if (evt.getClickCount() == 2) {
//           db_operation3 dbopt=new db_operation3();
String a= tbl1.getModel().getValueAt(tbl1.getSelectedRow(), 4).toString();
// this.setVisible();
bid.setText("");
bid.setText(a);
String b= tbl1.getModel().getValueAt(tbl1.getSelectedRow(), 3).toString();
// this.setVisible();
stid.setText("");
stid.setText(b); 
//           Date d= rdate.getDate().get(tbl1.getSelectedRow(),2).toString();
String date=tbl1.getModel().getValueAt(tbl1.getSelectedRow(), 2).toString();

//DateFormat date1=new SimpleDateFormat("dd/MM/yyyy");
//Date sDate;
//sDate=date1.parse(date);

rdate.setText(date);

        
        
//           rdate.setDate(date);
//           Date d= rdate.setSelectedDate()
//             Date  d1 = rdate.getDate(); // not in sql..... import in util
//        DateFormat df1= new SimpleDateFormat("yyyy-MM-dd");
//        //reltn maintain for date and dateformat
//        String issueda=df1.format(d1);
// TODO add your handling code here:
  
    }//GEN-LAST:event_tbl1MouseReleased
    }
    private void bidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bidActionPerformed

    private void bidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bidKeyReleased
        String name=this.bid.getText();

        db_operation dbopt=new db_operation();
        ResultSet rs1=dbopt.searchBookInformation(name);
        dtm.setRowCount(0);

        try {
            while(rs1.next()){
                String  id= rs1.getString(1); //String  id= rs.getString("ID");
                String  bname= rs1.getString(2); //String fname=rs.getString("FirstName");
                String  edition= rs1.getString(3);
                String  publisher= rs1.getString(4);

                String quantity=rs1.getString(5);

                Vector<String> v=new Vector<String>();
                v.add(id);
                v.add(bname);
                v.add(edition);
                v.add(publisher);

                v.add(quantity);
                dtm.addRow(v);

            }

        } catch (SQLException ex) {
            System.out.println("Error in addDataToTable"+ex);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_bidKeyReleased

    private void okbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okbtnActionPerformed
try {
       
        Date  d = rtdate.getDate(); // not in sql..... import in util
        DateFormat df= new SimpleDateFormat("yyyy-MM-dd");
        //reltn maintain for date and dateformat
        String returnda=df.format(d);
        
      
        String id3=tbl1.getModel().getValueAt(tbl1.getSelectedRow(), 0).toString();
        
        db_operation3 db = new db_operation3();
        db.addReturnInfo(returnda,id3);
        
        
        // TODO add your handling code here:
    } catch (ParseException ex) {
        Logger.getLogger(issuerecord.class.getName()).log(Level.SEVERE, null, ex);
    }
//        a=tbl1.getModel().getValueAt(tbl1.getSelectedRow(), 1).toString();
//        b=tbl1.getModel().getValueAt(tbl1.getSelectedRow(), 3).toString();
//        String id=tbl1.getModel().getValueAt(tbl1.getSelectedRow(), 0).toString();
//        String q=tbl1.getModel().getValueAt(tbl1.getSelectedRow(), 4).toString();
//        db_operation db = new db_operation();
//        db.updatebookq(Integer.parseInt(id),Integer.parseInt(q));
//
//        new issuerecord(a,b,id).setVisible(true);
        //          noResultlbl.setVisible(false);
        //        db_operation dbopt = new db_operation();
        //        ResultSet rs = dbopt.searchBookInformation((String) searchname.getText().toString());
        //        int j = 0;
        ////        try {
            ////
            ////            //  System.out.println("a");
            ////            // TODO add your handling code here:
            ////            while (rs.next()) {
                ////                String id = rs.getString(1);
                ////                int i = Integer.parseInt(id);
                ////                String k;
                ////                if (searchname.getText().isEmpty()) {
                    ////                    noResultlbl.setVisible(true);
                    ////                } else {
                    ////                    k = searchname.getText();
                    ////                    if (i == k) {
                        ////                        j = 1;
                        ////                    }
                    ////                }
                ////            }
            ////        } catch (SQLException ex) {
            ////            Logger.getLogger(Search.class.getName()).log(Level.SEVERE, null, ex);
            ////        }
        ////        if (j == 1) {
            //            issuerecord aa = new issuerecord((String) searchname.getText().toString());
            //            aa.setVisible(true);
            //
            //            db_operation dbopt1 = new db_operation();
            //            ResultSet rs11 = dbopt1.searchBookInformation((String) searchname.getText().toString());
            //
            //            rs1 = rs11;
            ////int column = 0;
            ////int row = jTable1.getSelectedRow();
            //            dtm.setRowCount(0);
            //            try {
                ////String value = jTable1.getModel().getValueAt(row, column).toString();
                ////        System.out.println(""+value);
                //                while (rs11.next()) {
                    //                    String id = rs11.getString(1); //String  id= rs.getString("ID");
                    //                    String name = rs11.getString(2); //String fname=rs.getString("FirstName");
                    //                    String edition = rs11.getString(3);
                    //                    String publisher = rs11.getString(4);
                    //                    String quantity = rs11.getString(5);
                    //
                    //
                    //                    Vector<String> v = new Vector<String>();
                    //                    v.add(id);
                    //                    v.add(name);
                    //                    v.add(edition);
                    //                    v.add(publisher);
                    //                    v.add(quantity);
                    //
                    //                    dtm.addRow(v);
                    //
                    //                    noResultlbl.setVisible(false);
                    //
                    //                }
                //
                //            } catch (SQLException ex) {
                //                System.out.println("Error in addDataToTable" + ex);
                //            }
            //            if (dtm.getRowCount() == 0) {
                //                noResultlbl.setVisible(true);
                //            }
            ////
            ////        } else {
            ////            noResultlbl.setVisible(true);
            ////        }
        //
        // TODO add your handling code here:
              JOptionPane.showMessageDialog(this, "Returned  successfully");
    }//GEN-LAST:event_okbtnActionPerformed

    private void stidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stidActionPerformed

    private void stidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stidKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_stidKeyReleased

    private void rtdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rtdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rtdateActionPerformed

    private void rdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdateActionPerformed

    private void rdateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rdateKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_rdateKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(view_issue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(view_issue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(view_issue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(view_issue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                view_issue dialog = new view_issue(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    public void addDataToTable() {
        try {
            db_operation3 dbopt=new db_operation3();
            ResultSet rs=dbopt.viewAllIssue();
            
            while(rs.next()){
              
                String  id= rs.getString(1); //String  id= rs.getString("ID");
                String  issuedate= rs.getString(2); //String fname=rs.getString("FirstName");
                String  returndate= rs.getString(3);
                 String  stdid= rs.getString(4);
                String  bid= rs.getString(5);


                
                  Vector<String> v=new Vector<String>();
                  v.add(id);
                  v.add(issuedate);
                  v.add(returndate);
                  v.add(stdid);
                  v.add(bid);
                
                  dtm.addRow(v); 
          
                
            }   } catch (SQLException ex) {
            Logger.getLogger(view_issue.class.getName()).log(Level.SEVERE, null, ex);
        }
}    
DefaultTableModel dtm=null; 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Returned_Date;
    private javax.swing.JTextField bid;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton okbtn;
    private javax.swing.JTextField rdate;
    private org.jdesktop.swingx.JXDatePicker rtdate;
    private javax.swing.JLabel searchlbl;
    private javax.swing.JLabel searchlbl1;
    private javax.swing.JLabel searchlbl3;
    private javax.swing.JTextField stid;
    private javax.swing.JTable tbl1;
    // End of variables declaration//GEN-END:variables
}
